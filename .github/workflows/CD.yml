# https://sergiodxa.com/articles/github-actions-npm-publish
# https://github.com/marketplace/actions/get-release-notes
name: CD

on:
  push:
    branches: [ main ]

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      is-new-version: ${{ steps.cpv.outputs.is-new-version }}
      committed-version: ${{ steps.cpv.outputs.committed-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Check package version
        id: cpv
        uses: PostHog/check-package-version@v2

  build:
    needs: check
    if: needs.check.outputs.is-new-version == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        node-version: [14.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - run: npm run lint
    - run: npm run test:ci
      env:
        TEST_COVERAGE_THRESHOLD: 0
        CI: true
    - run: npm run build
    - name: Log in to GitHub Docker Registry
      uses: docker/login-action@v1
      with:
        registry: docker.pkg.github.com
        username: ${{ secrets.PKG_ACCOUNT }}
        password: ${{ secrets.PKG_TOKEN }}
    - name: Push container image to github
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: |
          docker.pkg.github.com/${{ github.repository }}/poppy-server:${{ needs.check.outputs.committed-version }}
          docker.pkg.github.com/${{ github.repository }}/poppy-server:latest
    - uses: JS-DevTools/npm-publish@v1
      with:
        registry: https://registry.npmjs.org/
        token: ${{ secrets.NPM_TOKEN }}
        access: public

  deploy:
    if: needs.check.outputs.is-new-version == 'true'
    needs: [check, build]
    runs-on: ubuntu-latest
    steps:
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_SERVER_HOST }}
          username: ${{ secrets.DEPLOY_SERVER_USER_NAME }}
          password: ${{ secrets.DEPLOY_SERVER_DEPLOY_KEY }}
          port: ${{ secrets.DEPLOY_SERVER_PORT }}
          script: whoami
