swagger: "2.0"
info:
  version: "1.0.0"
  title: "Poppy Server API Specification"

tags:
- name: "Health"
- name: "AppUI"
  description: "App UI service group serve for the client UI. This group of api should not cover by `Authorization`"

- name: "Authorization"
  description: "Authorization service group."

- name: "User"
  description: "User service group."

- name: "Menu"
  description: "Menu service group. Include `HomeMenu` and `HeadMenu`"

- name: "Org"
  description: "Org service group."

- name: "Role"
  description: "Role service group."

- name: "App"
  description: "App service group."

- name: "Page"
  description: "Page service group."

consumes:
  - "application/json"
  - "application/x-www-form-urlencoded"
produces:
  - "application/json"

schemes:
- "http"
- "https"

securityDefinitions:
  accessToken:
    type: apiKey
    name: Authorization
    in: header

definitions:
  LoginDto:
    type: object
    properties:
      userName:
        type: string
        example: root
      password:
        type: string
        example: "********"
      appNo:
        type: string
    required:
      - userName
      - password
      - appNo

  ChangePasswordDto:
    type: object
    properties:
      oldPassword:
        type: string
      password:
        type: string
    required:
      - "oldPassword"
      - "password"

  RestPasswordInviteDto:
    type: object
    properties:
      userNo:
        type: string
    required:
      - "userNo"

  AppDomainUIInfoBo:
    type: object
    properties:
      appNo:
        type: string
      domain:
        type: string

  AppUIInfoBo:
    type: object
    properties:
      locale:
        type: string
      displayName:
         type: string
      icp:
        type: string
      status:
        type: string
      isExpired:
        type: boolean

  TwoFactorAuthDto:
    type: object
    properties:
      code:
        type:
          - string

      type:
        type:
          - string
        enum:
          - opt
          - email

paths:
  /health:
    get:
      tags: [ Health ]
      summary: "Get Server health info"
      responses:
        "200":
          description: ""

  /api/v1/app-ui/domain-info/{domain}:
    get:
      tags:
        - "AppUI"
      summary: "Get app-domain entity by domain"
      description: "This API should be the first one API for client to get the AppNo by domain."
      parameters:
        - in: path
          name: domain
          default: "http%3A%2F%2Flocalhost%3A7001"
          description: "If this value is empty it will get the domain from the request"
          type: string
          required: true
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/AppDomainUIInfoBo"

  /api/v1/app-ui/app-info/{appNo}:
    get:
      tags:
        - "AppUI"
      summary: "Get app-theme properties"
      description: "Get the app info before login"
      parameters:
        - in: path
          name: appNo
          type: string
          required: true
      responses:
        "200":
          schema:
            $ref: "#/definitions/AppUIInfoBo"
          description: ""

  /api/v1/app-ui/theme-info/{appNo}:
    get:
      tags:
        - "AppUI"
      summary: "Get app ui info"
      description: "Get the app ui info before login"
      parameters:
        - in: path
          name: appNo
          type: string
          required: true
      responses:
        "200":
          description: ""

  /api/v1/authorization/session/auth:
    post:
      tags:
        - "Authorization"
      summary: "Validate and get the login token."
      description: "Validate the login centennial and response the authorization token."
      parameters:
        - in: body
          name: loginDto
          required: true
          schema:
            $ref: "#/definitions/LoginDto"
      responses:
        "200":
          description: ""

  /api/v1/authorization/session:
    post:
      tags:
        - "Authorization"
      parameters:
        - in: header
          name: step-token
          required: true
          type: string
      responses:
        "200":
          description: ""

    delete:
      tags:
        - "Authorization"
      responses:
        "200":
          description: ""
      security:
        - accessToken: []

  /api/v1/authorization/two-factor:
    get:
      summary: "Two factor list for current user"
      tags:
        - "Authorization"
      parameters:
        - in: header
          name: step-token
          required: true
          type: string
      responses:
        "200":
          description: ""
    post:
      tags:
        - "Authorization"
      parameters:
        - in: header
          name: step-token
          required: true
          type: string
        - in: body
          name: twoFactorAuthDto
          required: true
          schema:
            $ref: "#/definitions/TwoFactorAuthDto"
      responses:
        "200":
          description: ""

  /api/v1/menu/home-menu:
    get:
      summary: "Home menu for current user"
      tags:
        - "Menu"
      responses:
        "200":
          description: ""
      security:
        - accessToken: []

  /api/v1/menu/head-menu:
    get:
      summary: "Head menu list for current user"
      tags:
        - "Menu"
      responses:
        "200":
          description: ""
      security:
        - accessToken: []

  /api/v1/user/user:
    get:
      summary: "User list current user"
      tags:
        - "User"
      responses:
        "200":
          description: ""
      security:
        - accessToken: []

  /api/v1/user/change-password/auth:
    post:
      summary: "change password"
      tags:
        - "User"
      parameters:
        - in: body
          name: changePasswordDto
          required: true
          schema:
            $ref: "#/definitions/ChangePasswordDto"
      responses:
        "200":
          description: ""
      security:
        - accessToken: []

  /api/v1/user/change-password:
    put:
      summary: "change password"
      tags:
        - "User"
      parameters:
        - in: header
          name: step-token
          required: true
          type: string
      responses:
        "200":
          description: ""
      security:
        - accessToken: []

  /api/v1/user/forget-password/auth:
    post:
      summary: "forget password"
      tags:
        - "User"
      parameters:
        - in: body
          name: loginDto
          required: true
          schema:
            $ref: "#/definitions/LoginDto"
      responses:
        "200":
          description: ""
      security:
        - accessToken: []

  /api/v1/user/forget-password:
    put:
      summary: "forget password"
      tags:
        - "User"
      parameters:
        - in: header
          name: step-token
          required: true
          type: string
      responses:
        "200":
          description: ""
      security:
        - accessToken: []

  /api/v1/user/rest-password-invite/auth:
    post:
      summary: "Reset password auth for current user"
      tags:
        - "User"
      parameters:
        - in: body
          name: restPasswordInviteDto
          required: true
          schema:
            $ref: "#/definitions/RestPasswordInviteDto"
      responses:
        "200":
          description: "From a login user to create a link for target user for reset password"
      security:
        - accessToken: []

  /api/v1/user/rest-password-invite:
    post:
      tags:
        - "User"
      parameters:
        - in: header
          name: step-token
          required: true
          type: string
      responses:
        "200":
          description: ""
      security:
        - accessToken: []

  /api/v1/user/rest-password:
    post:
      tags:
        - "User"
      parameters:
        - in: header
          name: step-token
          required: true
          type: string
      responses:
        "200":
          description: ""
      security:
        - accessToken: []

  /api/v1/role/role:
    get:
      summary: "Role list for current user"
      tags:
        - "Role"
      responses:
        "200":
          description: ""
      security:
        - accessToken: []

  /api/v1/org/org:
    get:
      summary: "Org list for current user"
      tags:
        - "Org"
      responses:
        "200":
          description: ""
      security:
        - accessToken: []

  /api/v1/app/app:
    get:
      summary: "App list for current user"
      tags:
        - "App"
      responses:
        "200":
          description: ""
      security:
        - accessToken: []

  /api/v1/app/app-theme:
    get:
      summary: "App theme list for current user"
      tags:
        - "App"
      responses:
        "200":
          description: ""
      security:
        - accessToken: []

  /api/v1/page/page:
    get:
      summary: "Page list for current user"
      tags:
        - "Page"
      responses:
        "200":
          description: ""
      security:
        - accessToken: []

  /api/v1/page/page/{appCode}:
    get:
      summary: "Page info for current user"
      tags:
        - "Page"
      parameters:
        - in: path
          name: appCode
          type: string
          required: true
      responses:
        "200":
          description: ""
      security:
        - accessToken: []

externalDocs:
  description: "http://swagger.io"
  url: "http://swagger.io"
